BEGIN TRANSACTION 

 go

set ANSI_DEFAULTS ON

 go

CREATE TABLE SRD_PRODUCT_VERSIONS(product CHAR(50), version CHAR(50))
CREATE TABLE LIB_FEAT (LIB_FEAT_ID bigint NOT NULL, FTYPE_ID smallint NOT NULL, FEAT_HASH CHAR(40) NOT NULL, FEAT_DESC VARCHAR(150), FELEM_VALUES VARCHAR(3000) NOT NULL, ANONYMIZED VARCHAR(5) NOT NULL, VERSION smallint NOT NULL) 
ALTER TABLE LIB_FEAT ADD CONSTRAINT LIB_FEAT_PK PRIMARY KEY NONCLUSTERED (LIB_FEAT_ID)
CREATE UNIQUE INDEX LIB_FEAT_SK ON LIB_FEAT(FEAT_HASH, FTYPE_ID, ANONYMIZED) 
CREATE TABLE LIB_FEAT_HKEY (FEAT_HASH CHAR(40) NOT NULL, FTYPE_ID smallint NOT NULL, ANONYMIZED VARCHAR(5) NOT NULL, LIB_FEAT_ID bigint NOT NULL) 
ALTER TABLE LIB_FEAT_HKEY ADD CONSTRAINT LIB_FEAT_HKEY_PK PRIMARY KEY NONCLUSTERED (FEAT_HASH, FTYPE_ID, ANONYMIZED)
CREATE TABLE SYS_HW_CHECK (LIB_FEAT_ID bigint NOT NULL, FTYPE_ID smallint NOT NULL, FEAT_HASH CHAR(40) NOT NULL, FEAT_DESC VARCHAR(150), FELEM_VALUES VARCHAR(3000) NOT NULL, ANONYMIZED VARCHAR(5) NOT NULL, VERSION smallint NOT NULL) 
ALTER TABLE SYS_HW_CHECK ADD CONSTRAINT SYS_HW_CHECK_PK PRIMARY KEY NONCLUSTERED (LIB_FEAT_ID)
CREATE UNIQUE INDEX SYS_HW_CHECK_SK ON SYS_HW_CHECK(FEAT_HASH, FTYPE_ID, ANONYMIZED) 
CREATE TABLE LIB_UTYPE (UTYPE_CODE VARCHAR(50) NOT NULL, UTYPE_DESC VARCHAR(50)) 
ALTER TABLE LIB_UTYPE ADD CONSTRAINT LIB_UTYPE_PK PRIMARY KEY NONCLUSTERED (UTYPE_CODE)
CREATE TABLE DSRC_RECORD (DSRC_ID smallint NOT NULL, RECORD_ID VARCHAR(250) NOT NULL, ETYPE_ID smallint NOT NULL, ENT_SRC_KEY VARCHAR(250) NOT NULL, OBS_ENT_HASH CHAR(40) NOT NULL, JSON_DATA VARCHAR(MAX), CONFIG_ID bigint, FIRST_SEEN_DT DATETIME, LAST_SEEN_DT DATETIME) 
ALTER TABLE DSRC_RECORD ADD CONSTRAINT DSRC_RECORD_PK PRIMARY KEY NONCLUSTERED (RECORD_ID, DSRC_ID)
CREATE INDEX DSRC_RECORD_SK ON DSRC_RECORD(ENT_SRC_KEY, DSRC_ID) 
CREATE INDEX DSRC_RECORD_HK ON DSRC_RECORD(OBS_ENT_HASH, DSRC_ID, ETYPE_ID) 
CREATE TABLE DSRC_RECORD_HKEY (OBS_ENT_HASH CHAR(40) NOT NULL, DSRC_ID smallint NOT NULL, RECORD_ID VARCHAR(250) NOT NULL) 
ALTER TABLE DSRC_RECORD_HKEY ADD CONSTRAINT DSRC_RECORD_HKEY_PK PRIMARY KEY NONCLUSTERED (OBS_ENT_HASH, DSRC_ID, RECORD_ID)
CREATE TABLE OBS_ENT (OBS_ENT_ID bigint NOT NULL, ETYPE_ID smallint NOT NULL, DSRC_ID smallint NOT NULL, ENT_SRC_KEY VARCHAR(250) NOT NULL, ENT_SRC_DESC VARCHAR(250), FROM_LENS_ID smallint, FROM_RES_ENT_ID bigint, FIRST_SEEN_DT DATETIME, LAST_SEEN_DT DATETIME, LAST_TOUCH_DT bigint, LOCKING_ID bigint NOT NULL, NODE_NAME VARCHAR(50) NOT NULL, LOCK_DSRC_ACTION CHAR(1), FEATURES VARCHAR(MAX)) 
ALTER TABLE OBS_ENT ADD CONSTRAINT OBS_ENT_PK PRIMARY KEY NONCLUSTERED (OBS_ENT_ID)
CREATE UNIQUE INDEX OBS_ENT_SK ON OBS_ENT(ENT_SRC_KEY, DSRC_ID) 
CREATE TABLE OBS_ENT_SKEY (ENT_SRC_KEY VARCHAR(250) NOT NULL, ETYPE_ID smallint NOT NULL, DSRC_ID smallint NOT NULL, OBS_ENT_ID bigint NOT NULL) 
ALTER TABLE OBS_ENT_SKEY ADD CONSTRAINT OBS_ENT_SKEY_PK PRIMARY KEY NONCLUSTERED (ENT_SRC_KEY, DSRC_ID)
CREATE TABLE OBS_FEAT_EKEY (OBS_ENT_ID bigint NOT NULL, LIB_FEAT_ID bigint NOT NULL, FTYPE_ID smallint NOT NULL, UTYPE_CODE VARCHAR(50) NOT NULL, USED_FROM_DT DATETIME, USED_THRU_DT DATETIME, SYS_LSTUPD_DT DATETIME) 
ALTER TABLE OBS_FEAT_EKEY ADD CONSTRAINT OBS_FEAT_EKEY_PK PRIMARY KEY NONCLUSTERED (OBS_ENT_ID, LIB_FEAT_ID, UTYPE_CODE)
CREATE TABLE RES_ENT (RES_ENT_ID bigint NOT NULL, LENS_ID smallint NOT NULL, ECLASS_ID smallint NOT NULL, INTEREST_LEVEL smallint, CONFUSION_LEVEL smallint, NUM_OBS_ENT int, FIRST_SEEN_DT DATETIME, LAST_SEEN_DT DATETIME, LAST_TOUCH_DT bigint, LOCKING_ID bigint NOT NULL, NODE_NAME VARCHAR(50) NOT NULL, LOCK_DSRC_ACTION CHAR(1)) 
ALTER TABLE RES_ENT ADD CONSTRAINT RES_ENT_PK PRIMARY KEY NONCLUSTERED (RES_ENT_ID, LENS_ID)
CREATE TABLE RES_ENT_OKEY (OBS_ENT_ID bigint NOT NULL, LENS_ID smallint NOT NULL, RES_ENT_ID bigint NOT NULL, ER_ID bigint NOT NULL, ERRULE_ID smallint NOT NULL, MATCH_KEY VARCHAR(1000)) 
ALTER TABLE RES_ENT_OKEY ADD CONSTRAINT RES_ENT_OKEY_PK PRIMARY KEY NONCLUSTERED (OBS_ENT_ID, LENS_ID)
CREATE UNIQUE INDEX RES_ENT_OKEY_SK ON RES_ENT_OKEY(RES_ENT_ID, LENS_ID, OBS_ENT_ID) 
CREATE TABLE RES_ENT_RKEY (RES_ENT_ID bigint NOT NULL, LENS_ID smallint NOT NULL, OBS_ENT_ID bigint NOT NULL) 
ALTER TABLE RES_ENT_RKEY ADD CONSTRAINT RES_ENT_RKEY_PK PRIMARY KEY NONCLUSTERED (RES_ENT_ID, LENS_ID, OBS_ENT_ID)
CREATE TABLE RES_FEAT_EKEY (RES_ENT_ID bigint NOT NULL, ECLASS_ID smallint NOT NULL, LENS_ID smallint NOT NULL, LIB_FEAT_ID bigint NOT NULL, FTYPE_ID smallint NOT NULL, UTYPE_CODE VARCHAR(50) NOT NULL, SUPPRESSED CHAR(1), USED_FROM_DT DATETIME, USED_THRU_DT DATETIME, FIRST_SEEN_DT DATETIME, LAST_SEEN_DT DATETIME) 
ALTER TABLE RES_FEAT_EKEY ADD CONSTRAINT RES_FEAT_EKEY_PK PRIMARY KEY NONCLUSTERED (RES_ENT_ID, LENS_ID, LIB_FEAT_ID, UTYPE_CODE)
CREATE UNIQUE INDEX RES_FEAT_EKEY_SK ON RES_FEAT_EKEY(LIB_FEAT_ID, LENS_ID, RES_ENT_ID, UTYPE_CODE) 
CREATE TABLE RES_FEAT_LKEY (LIB_FEAT_ID bigint NOT NULL, LENS_ID smallint NOT NULL, ECLASS_ID smallint NOT NULL, RES_ENT_ID bigint NOT NULL, UTYPE_CODE VARCHAR(50) NOT NULL) 
ALTER TABLE RES_FEAT_LKEY ADD CONSTRAINT RES_FEAT_LKEY_PK PRIMARY KEY NONCLUSTERED (LIB_FEAT_ID, LENS_ID, RES_ENT_ID, UTYPE_CODE)
CREATE TABLE RES_FEAT_STAT (LENS_ID smallint NOT NULL, LIB_FEAT_ID bigint NOT NULL, ECLASS_ID smallint NOT NULL, NUM_RES_ENT int NOT NULL, NUM_RES_ENT_OOM int NOT NULL, CANDIDATE_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL, SCORING_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL) 
ALTER TABLE RES_FEAT_STAT ADD CONSTRAINT RES_FEAT_STAT_PK PRIMARY KEY NONCLUSTERED (LIB_FEAT_ID, LENS_ID, ECLASS_ID)
CREATE TABLE RES_RELATE (RES_REL_ID bigint NOT NULL, LENS_ID smallint NOT NULL, MIN_RES_ENT_ID bigint NOT NULL, MAX_RES_ENT_ID bigint NOT NULL, REL_STRENGTH smallint, REL_STATUS smallint NULL, IS_DISCLOSED smallint, IS_AMBIGUOUS smallint, INTEREST_LEVEL smallint, CONFUSION_LEVEL smallint, LAST_ER_ID bigint, LAST_REF_SCORE smallint, LAST_ERRULE_ID smallint, MATCH_KEY VARCHAR(1000), MATCH_LEVELS VARCHAR(50) NULL, FIRST_SEEN_DT DATETIME, LAST_SEEN_DT DATETIME) 
ALTER TABLE RES_RELATE ADD CONSTRAINT RES_RELATE_PK PRIMARY KEY NONCLUSTERED (RES_REL_ID)
CREATE TABLE RES_REL_EKEY (RES_ENT_ID bigint NOT NULL, LENS_ID smallint NOT NULL, REL_ENT_ID bigint NOT NULL, RES_REL_ID bigint NOT NULL) 
ALTER TABLE RES_REL_EKEY ADD CONSTRAINT RES_REL_EKEY_PK PRIMARY KEY NONCLUSTERED (RES_ENT_ID, LENS_ID, REL_ENT_ID)
CREATE TABLE SYS_SEQUENCE (SEQUENCE_NAME VARCHAR(50) NOT NULL, NEXT_SEQUENCE bigint NOT NULL, CACHE_SIZE bigint NOT NULL, SCATTER CHAR(1) NOT NULL) 
ALTER TABLE SYS_SEQUENCE ADD CONSTRAINT SYS_SEQUENCE_PK PRIMARY KEY NONCLUSTERED (SEQUENCE_NAME)
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('ER_ID',1,100000,'N')
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('LIB_FEAT_ID',1,100000,'N')
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('OBS_ENT_ID',1,100000,'N')
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('OBS_ID',1,100000,'N')
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('RES_REL_ID',1,100000,'N')
CREATE TABLE SYS_CFG (CONFIG_DATA_ID bigint NOT NULL, CONFIG_DATA VARCHAR(MAX) NOT NULL, CONFIG_COMMENTS VARCHAR(200) NOT NULL, SYS_CREATE_DT DATETIME NOT NULL) 
ALTER TABLE SYS_CFG ADD CONSTRAINT SYS_CFG_PK PRIMARY KEY NONCLUSTERED (CONFIG_DATA_ID)
CREATE TABLE SYS_CODES_USED (CODE_TYPE VARCHAR(25) NOT NULL, CODE VARCHAR(25) NOT NULL, CODE_ID smallint NOT NULL) 
ALTER TABLE SYS_CODES_USED ADD CONSTRAINT SYS_CODES_USED_PK PRIMARY KEY NONCLUSTERED (CODE_TYPE, CODE)
CREATE UNIQUE INDEX SYS_CODES_USED_SK ON SYS_CODES_USED(CODE_TYPE, CODE_ID) 
CREATE TABLE SYS_VARS (VAR_GROUP VARCHAR(25) NOT NULL, VAR_CODE VARCHAR(25) NOT NULL, VAR_VALUE VARCHAR(25) NOT NULL, SYS_LSTUPD_DT DATETIME) 
ALTER TABLE SYS_VARS ADD CONSTRAINT SYS_VARS_PK PRIMARY KEY NONCLUSTERED (VAR_GROUP, VAR_CODE)
INSERT INTO SYS_VARS (VAR_GROUP,VAR_CODE,VAR_VALUE) VALUES ('VERSION','SCHEMA','3.0')
CREATE TABLE SYS_STATUS (SYSTEM_CODE VARCHAR(50) NOT NULL, LAST_TOUCH_DT DATETIME) 
ALTER TABLE SYS_STATUS ADD CONSTRAINT SYS_STATUS_PK PRIMARY KEY NONCLUSTERED (SYSTEM_CODE)
CREATE TABLE SYS_EVAL_QUEUE (MSG_ID bigint IDENTITY(1,1) NOT NULL, LENS_CODE VARCHAR(25) NOT NULL, ETYPE_CODE VARCHAR(25) NOT NULL, DSRC_CODE VARCHAR(25) NOT NULL, ENT_SRC_KEY VARCHAR(200) NOT NULL, MSG VARCHAR(MAX)) 
ALTER TABLE SYS_EVAL_QUEUE ADD CONSTRAINT SYS_EVAL_QUEUE_PK PRIMARY KEY NONCLUSTERED (MSG_ID)
CREATE UNIQUE INDEX IX_EVAL_QUEUE ON SYS_EVAL_QUEUE(ENT_SRC_KEY, DSRC_CODE, ETYPE_CODE, LENS_CODE) 
DELETE FROM SRD_PRODUCT_VERSIONS WHERE PRODUCT='PIPELINE'
INSERT INTO SRD_PRODUCT_VERSIONS VALUES('PIPELINE','4.3.0.8')
 go

set ANSI_DEFAULTS OFF

 go

COMMIT 

 go


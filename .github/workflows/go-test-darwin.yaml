name: Go test darwin

on: [pull_request, workflow_dispatch]

env:
  ACCEPT_EULA: Y
  MSSQL_PID: Developer
  MSSQL_SA_PASSWORD: Passw0rd
  MYSQL_DATABASE: G2
  MYSQL_PASSWORD: mysql
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: mysql
  POSTGRESQL_DATABASE: G2
  POSTGRESQL_PASSWORD: senzing
  POSTGRESQL_POSTGRES_PASSWORD: postgres
  POSTGRESQL_USERNAME: senzing
  SENZING_ACCEPT_EULA: I_ACCEPT_THE_SENZING_EULA
  SENZING_TOOLS_DATABASE_URL: sqlite3://na:na@nowhere/tmp/sqlite/G2C.db

permissions:
  contents: read

jobs:
  go-test-darwin:
    name: "Go test with OS: ${{ matrix.os }}; Go: ${{ matrix.go }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.24"]
        os: [macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Install Docker
      #   uses: docker-practice/actions-setup-docker@master
      #   timeout-minutes: 12

      - name: Setup docker (missing on MacOS)
        run: |
          brew install --cask docker
          brew install colima
          colima start

      # - name: Install PostgreSQL
      #   uses: ikalnytskyi/action-setup-postgres@v6
      #   with:
      #     username: senzing
      #     password: senzing
      #     database: G2
      #     port: 5432
      #   id: postgres

      - name: postgreSQL service
        run: docker run --detach --env POSTGRESQL_DATABASE --env POSTGRESQL_PASSWORD --env POSTGRESQL_POSTGRES_PASSWORD --env POSTGRESQL_USERNAME --publish 5432:5432 bitnami/postgresql:latest

      - name: MsSQL service
        run: |
          docker run --detach --env ACCEPT_EULA --env MSSQL_PID --env MSSQL_SA_PASSWORD --publish 1433:1433 mcr.microsoft.com/mssql/server

      - name: MySQL service
        run: |
          docker run --detach --env MYSQL_DATABASE --env MYSQL_PASSWORD --env MYSQL_ROOT_PASSWORD --env MYSQL_USER --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=6 --publish 3306:3306 bitnami/mysql

      - name: Make empty G2C.db
        run: |
          mkdir /tmp/sqlite
          touch /tmp/sqlite/G2C.db

      # - name: Run go test
      #   run: go test -v -p 1 ./...

      - name: Run go test - main
        run: |
          go test -v -p 1 ./.

      - name: Run go test - connector
        run: |
          go test -v -p 1 ./connector

      - name: Run go test - connectordb2
        run: |
          go test -v -p 1 ./connectordb2

      - name: Run go test - connectormssql
        run: |
          go test -v -p 1 ./connectormssql

      - name: Run go test - connectormysql
        run: |
          go test -v -p 1 ./connectormysql

      - name: Run go test - connectorpostgresql
        run: |
          go test -v -p 1 ./connectorpostgresql

      - name: Run go test - connectorsqlite
        run: |
          go test -v -p 1 ./connectorsqlite

      - name: Run go test - dbhelper
        run: go test -v -p 1 ./dbhelper

      - name: Run go test - postgresql
        run: |
          go test -v -p 1 ./postgresql

      - name: Run go test - sqlexecutor
        run: |
          go test -v -p 1 ./sqlexecutor

      - name: Run go test
        run: |
          go test -json -v -p 1 -coverprofile=./cover.out -covermode=atomic -coverpkg=./... ./...  2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: cover.out
          path: ./cover.out

      - name: Upload test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error

  coverage:
    name: Coverage
    needs: go-test-darwin
    uses: senzing-factory/build-resources/.github/workflows/go-coverage.yaml@v2
    with:
      coverage-config: ./.github/coverage/testcoverage.yaml

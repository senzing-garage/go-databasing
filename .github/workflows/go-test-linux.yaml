name: Go test linux

on: [push]

env:
  SENZING_TOOLS_DATABASE_URL: sqlite3://na:na@nowhere/tmp/sqlite/G2C.db

permissions:
  contents: read

jobs:
  go-test-linux:
    name: "Go test with OS: ${{ matrix.os }}; Go: ${{ matrix.go }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ["1.21"]
        os: [ubuntu-latest]

    services:
      postgres:
        env:
          POSTGRESQL_DATABASE: G2
          POSTGRESQL_PASSWORD: senzing
          POSTGRESQL_POSTGRES_PASSWORD: postgres
          POSTGRESQL_USERNAME: senzing
        image: bitnami/postgresql
        ports:
          - 5432:5432

      mssql:
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
          MSSQL_SA_PASSWORD: Passw0rd
        image: mcr.microsoft.com/mssql/server
        ports:
          - 1433:1433

      mysql:
        env:
          MYSQL_DATABASE: G2
          MYSQL_PASSWORD: mysql
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: mysql
        image: bitnami/mysql
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Make empty G2C.db
        run: |
          mkdir /tmp/sqlite
          touch /tmp/sqlite/G2C.db

      - name: Run go test
        run: go test -json -v -p 1 -coverprofile=./cover.out -covermode=atomic -coverpkg=./... ./...  2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: cover.out
          path: ./cover.out

      - name: Upload test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error

  coverage:
    name: Coverage
    needs: go-test-linux
    uses: senzing-factory/build-resources/.github/workflows/go-coverage.yaml@v2
    with:
      coverage-config: ./.github/coverage/testcoverage.yaml
